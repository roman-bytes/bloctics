.react-isometric-map-wrapper {
  --p-ratio: 1.4142;
  --p-map-width: var(--map-width, 1);
  --p-map-height: var(--map-height, 1);
  --p-map-max-dimension: var(--map-max-dimension, var(--p-map-width));
  --p-tile-size: calc(var(--tile-size, 48) / var(--p-ratio));
  --p-v-tile-size: var(--tile-size, 48);
  --p-slab-size: var(--slab-size, 12);
  --p-size-unit: var(--size-unit, 1px);
  --p-margin-top: var(--margin-top, 12);
  --p-margin-right: var(--margin-right, 12);
  --p-margin-bottom: var(--margin-bottom, 12);
  --p-margin-left: var(--margin-left, 12);
  --p-center-y: calc(var(--p-map-max-dimension) * var(--p-tile-size) / 2);
  --p-map-offset-y: var(--map-offset-y, 0);
  --p-center-x: calc(
    (var(--p-map-width) + var(--map-height) - 1) * var(--p-tile-size) / 2
  );
  width: calc(
    var(--p-size-unit) *
      (
        var(--p-v-tile-size) * (var(--p-map-width) + var(--p-map-height) + 5) /
          2
      )
  );
  height: calc(
    var(--p-size-unit) *
      (
        var(--p-map-offset-y) + var(--p-map-max-dimension) *
          var(--p-v-tile-size)
      )
  );
}
.react-isometric-map {
  width: calc(var(--p-map-width) * var(--p-tile-size) * var(--p-size-unit));
  height: calc(var(--p-map-height) * var(--p-tile-size) * var(--p-size-unit));
  display: grid;
  grid-template-columns: repeat(
    var(--p-map-width),
    calc(var(--p-size-unit) * var(--p-tile-size))
  );
  grid-template-rows: repeat(
    var(--p-map-height),
    calc(var(--p-size-unit) * var(--p-tile-size))
  );
  -webkit-transform: translate(
      calc(var(--p-size-unit) * (var(--p-tile-size) * 3 - var(--p-tile-size))),
      calc(var(--p-size-unit) * (var(--p-center-y) + var(--p-map-offset-y)))
    )
    rotateX(60deg) rotate(45deg);
  transform: translate(
      calc(var(--p-size-unit) * (var(--p-tile-size) * 3 - var(--p-tile-size))),
      calc(var(--p-size-unit) * (var(--p-center-y) + var(--p-map-offset-y)))
    )
    rotateX(60deg) rotate(45deg);
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
}
.react-isometric-tile {
  --background-floor: #ffffff;
  --background-left-wall: #ffffff;
  --background-right-wall: #ffffff;
  --p-z: var(--z, 0);
  --p-left-z: var(--left-z, var(--p-z, 0));
  --p-right-z: var(--right-z, var(--p-z, 0));
  --p-elevation: calc(
    -1 * var(--z) * var(--p-slab-size) * var(--p-size-unit) * var(--p-ratio)
  );
  grid-column: calc(1 + var(--x));
  grid-row: calc(1 + var(--y));
  position: relative;
  width: calc(var(--p-size-unit) * var(--p-tile-size));
  height: calc(var(--p-size-unit) * var(--p-tile-size));
  -webkit-transform: translate(var(--p-elevation), var(--p-elevation));
  -ms-transform: translate(var(--p-elevation), var(--p-elevation));
  transform: translate(var(--p-elevation), var(--p-elevation));
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2);
}
.react-isometric-tile > .floor {
  background: var(--background-floor);
  border: 1px solid #384034;
  width: calc(var(--p-size-unit) * var(--p-tile-size));
  height: calc(var(--p-size-unit) * var(--p-tile-size));
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
}
.react-isometric-tile > .floor,
.react-isometric-tile > .wall {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: absolute;
}
.react-isometric-tile > .wall.left {
  border: 1px solid #384034;
  background: var(--background-left-wall);
  width: calc(var(--p-size-unit) * var(--p-tile-size));
  height: calc(
    var(--p-size-unit) * var(--p-slab-size) * var(--p-left-z) * var(--p-ratio)
  );
  -webkit-transform: translateY(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewX(45deg);
  -ms-transform: translateY(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewX(45deg);
  transform: translateY(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewX(45deg);
  -webkit-transform-origin: right top;
  -ms-transform-origin: right top;
  transform-origin: right top;
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 2);
}
.react-isometric-tile > .wall.right {
  background: var(--background-right-wall);
  border: 1px solid #384034;
  height: calc(var(--p-size-unit) * var(--p-tile-size));
  width: calc(
    var(--p-size-unit) * var(--p-slab-size) * var(--p-right-z) * var(--p-ratio)
  );
  -webkit-transform: translateX(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewY(45deg);
  -ms-transform: translateX(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewY(45deg);
  transform: translateX(calc(var(--p-size-unit) * var(--p-tile-size)))
    skewY(45deg);
  -webkit-transform-origin: left top;
  -ms-transform-origin: left top;
  transform-origin: left top;
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 1);
}
.react-isometric-tile .textures-group {
  pointer-events: none;
  position: relative;
  -webkit-transform: rotate(-45deg) scale(var(--p-ratio));
  -ms-transform: rotate(-45deg) scale(var(--p-ratio));
  transform: rotate(-45deg) scale(var(--p-ratio));
  width: calc(var(--p-size-unit) * var(--p-tile-size));
  height: calc(var(--p-size-unit) * (var(--p-tile-size)));
  --p-inverse-ratio: 1.24266;
}
.react-isometric-tile .textures-group .floor {
  left: calc(
    var(--p-size-unit) * -1 * (var(--p-margin-left) + var(--p-tile-size) / 2) /
      var(--p-ratio) + 1px
  );
  right: calc(var(--p-size-unit) * var(--p-margin-right) / var(--p-ratio));
  top: calc(
    -1 * var(--p-size-unit) * var(--p-margin-top) / var(--p-ratio) + 1px
  );
  bottom: calc(
    -1 * var(--p-size-unit) * var(--p-margin-bottom) / var(--p-ratio)
  );
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 4);
}
.react-isometric-tile .textures-group .floor,
.react-isometric-tile .textures-group .top {
  position: absolute;
  -webkit-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  -ms-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
}
.react-isometric-tile .textures-group .top {
  top: calc(var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) - 1px);
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
}
.react-isometric-tile .textures-group .top.left {
  left: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-tile .textures-group .top.right {
  right: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-tile .textures-group .middle {
  position: absolute;
  top: calc(
    var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) +
      var(--p-size-unit) * (var(--p-slab-size)) * var(--wall-index) *
      var(--p-ratio) - 1px
  );
  -webkit-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  -ms-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
}
.react-isometric-tile .textures-group .middle.left {
  left: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-tile .textures-group .middle.right {
  right: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-tile .textures-group .bottom {
  -webkit-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  -ms-transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
  position: absolute;
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
}
.react-isometric-tile .textures-group .bottom.left {
  top: calc(
    var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) +
      var(--p-size-unit) * var(--p-slab-size) * var(--p-left-z) * var(--p-ratio)
  );
  left: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-tile .textures-group .bottom.right {
  top: calc(
    var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) +
      var(--p-size-unit) * var(--p-slab-size) * var(--p-right-z) *
      var(--p-ratio)
  );
  right: calc(
    var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px
  );
}
.react-isometric-object-wrapper {
  opacity: 0.5;
  pointer-events: none;
  --p-z: var(--z, 0);
  --p-elevation: calc(
    var(--z) * var(--p-slab-size) * var(--p-size-unit) * var(--p-ratio)
  );
  --p-margin: calc(
    -1 * var(--p-size-unit) * var(--p-margin-bottom) * var(--p-ratio)
  );
  position: relative;
  grid-column: calc(1 + var(--x));
  grid-row: calc(1 + var(--y));
  width: calc(var(--p-size-unit) * var(--p-tile-size));
  height: calc(var(--p-size-unit) * var(--p-tile-size));
  z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 6);
  -webkit-transform: rotate(-45deg) scale(var(--p-ratio));
  -ms-transform: rotate(-45deg) scale(var(--p-ratio));
  transform: rotate(-45deg) scale(var(--p-ratio));
}
.react-isometric-object-wrapper.active {
  pointer-events: auto;
  opacity: 1;
}
.react-isometric-object {
  position: absolute;
  left: calc(
    var(--p-size-unit) *
      (var(--p-tile-size) - var(--object-width) / var(--p-ratio)) / 2
  );
  --p-bottom: calc(var(--p-margin) + var(--p-elevation));
  bottom: var(--p-bottom);
  width: calc(var(--p-size-unit) * var(--object-width) / var(--p-ratio));
  height: calc(var(--p-size-unit) * var(--object-height) * 2 / var(--p-ratio));
}
.react-isometric-object img {
  pointer-events: none;
  width: 100%;
  height: 100%;
}
/*# sourceMappingURL=index.css.map*/
